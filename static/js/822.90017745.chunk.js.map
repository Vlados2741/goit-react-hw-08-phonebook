{"version":3,"file":"static/js/822.90017745.chunk.js","mappings":"sNAEaA,EAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,MAAmB,CACzCC,QAASD,EAASC,QAClBC,MAAOF,EAASE,MAFM,EAKXC,EAAsB,SAAC,GAA0B,IAAxBH,EAAuB,EAAvBA,SAAUI,EAAa,EAAbA,OAC9C,IAAKA,EACH,OAAOJ,EAASK,MAGlB,IAAMC,EAAmBF,EAAOG,oBAMhC,OALyBP,EAASK,MAAMD,QAAO,YAG7C,OAH2D,EAAXI,KACpBD,oBACEE,SAASH,EAExC,GAEF,ECnBYI,EAAY,SAAAC,GAAK,OAAIA,EAAMP,MAAV,E,UCmB1BQ,EAAS,WAGX,IAH0B,IAAdC,EAAc,uDAAP,GACfC,EAAK,GACLC,EAAQC,OAAOC,gBAAgB,IAAIC,WAAWL,IAC3CA,KAAQ,CACb,IAAIM,EAAqB,GAAdJ,EAAMF,GAEfC,GADEK,EAAO,GACHA,EAAKC,SAAS,IACXD,EAAO,IACTA,EAAO,IAAIC,SAAS,IAAIC,cACtBF,EAAO,GACV,IAEA,GAET,CACD,OAAOL,CACR,E,sCC3BKQ,GAAeC,EAAAA,EAAAA,IAAOC,EAAAA,EAAPD,CAAkB,CACrC,wBAAyB,CACvBE,MAAO,QACPC,MAAO,QAET,uBAAwB,CACtBA,MAAO,QAET,sBAAuB,CACrBA,MAAO,QAET,2BAA4B,CAC1B,aAAc,CACZC,YAAa,OACbC,UAAW,6CAEb,mBAAoB,CAClBD,YAAa,QAEf,yBAA0B,CACxBA,YAAa,WAKJ,SAASE,IACtB,OAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOtB,EAAP,KAAauB,EAAb,KACA,GAA4BD,EAAAA,EAAAA,UAAS,IAArC,eAAOE,EAAP,KAAeC,EAAf,KACA,GAA4BH,EAAAA,EAAAA,UAAS,IAArC,eAAOI,EAAP,KAAeC,EAAf,KAEMC,GAAWC,EAAAA,EAAAA,MAEXC,EAAe,SAAAC,GACnB,MAAwBA,EAAMC,OAAtBhC,EAAR,EAAQA,KAAMiC,EAAd,EAAcA,MAEd,OAAQjC,GACN,IAAK,OACHuB,EAAQU,GACR,MAEF,IAAK,SACHR,EAAUQ,GACV,MAEF,IAAK,SACHN,EAAUM,GACV,MAEF,QACE,OAEL,EAeGC,EAAS9B,IACT+B,EAAW/B,IAEf,OACE,kBAAMgC,UAAU,iBAAiBC,SAjBd,SAAAN,GACnBA,EAAMO,iBACN,IAAMC,EAAU,CACdvC,KAAAA,EACAwB,OAAAA,EACAE,OAAAA,GAEFH,EAAQ,IACRE,EAAU,IACVE,EAAU,IACVC,GAASY,EAAAA,EAAAA,IAAWD,GACrB,EAMC,WACE,SAACzB,EAAD,CACE2B,OAAO,SACPC,MAAM,OACNC,QAAQ,WACRC,SAAUd,EACVxB,GAAI4B,EACJD,MAAOjC,EACPA,KAAK,OACL6C,aAAa,MACbC,QAAQ,yHACRC,UAAQ,KAEV,SAACjC,EAAD,CACE2B,OAAO,SACPC,MAAM,SACNC,QAAQ,WACRC,SAAUd,EACVxB,GAAI6B,EACJF,MAAOT,EACPwB,KAAK,MACLhD,KAAK,SACL6C,aAAa,MACbC,QAAQ,yFACRC,UAAQ,KAEV,SAACE,EAAA,EAAD,CACED,KAAK,SACLL,QAAQ,YACRO,GAAI,CACFjC,MAAO,OACPkC,UAAW,OACXC,SAAU,OACVC,WAAY,MACZnC,MAAO,OACPoC,gBAAiB,OACjBC,OAAQ,iBACRnC,UAAW,iDACXoC,aAAc,OACd,yBAA0B,CACxBtC,MAAO,OACPoC,gBAAiB,OACjBlC,UAAW,8CAhBjB,2BAwBL,CC7Hc,SAASqC,EAAT,GAA0C,IAAjBC,EAAgB,EAAhBA,aAChC9B,GAAWC,EAAAA,EAAAA,MACX8B,EAAcD,EAAaE,KAAI,YAAmC,IAAhCtD,EAA+B,EAA/BA,GAAIN,EAA2B,EAA3BA,KAAMwB,EAAqB,EAArBA,OAAqB,EAAbE,OACxD,OACE,gBAAaU,UAAU,eAAvB,WACE,yBACGpC,EADH,KACWwB,EACR,OAEH,mBACEY,UAAU,aACVY,KAAK,SACLa,QAAS,kBAAMjC,GAASkC,EAAAA,EAAAA,IAAcxD,GAA7B,EAHX,sBALOA,EAcZ,IAED,OAAO,wBAAKqD,GACb,C,cCpBc,SAASI,EAAT,GAAsC,IAAXnE,EAAU,EAAVA,OAClCoE,EAAW5D,IACXwB,GAAWC,EAAAA,EAAAA,MAMjB,OACE,6BACE,kBAAOoC,QAASD,EAAhB,oCACA,kBACEnB,aAAa,MACbvC,GAAI0D,EACJ/B,MAAOrC,EACPoD,KAAK,OACLhD,KAAK,SACL4C,SAbe,SAAAb,GACnBH,GAASsC,EAAAA,EAAAA,GAAUnC,EAAMC,OAAOC,OACjC,MAeF,C,cCdc,SAASkC,IACtB,IAAMvC,GAAWC,EAAAA,EAAAA,MACXrC,GAAW4E,EAAAA,EAAAA,IAAYzE,GAC7B,GAA6ByE,EAAAA,EAAAA,IAAY7E,GAAjC8E,EAAR,EAAQA,UAAW3E,EAAnB,EAAmBA,MACbE,GAASwE,EAAAA,EAAAA,IAAYlE,GAErBoE,EAAMC,SAASC,cAAc,qBAOnC,OANAF,EAAIG,MAAMC,WACR,0MACFJ,EAAIG,MAAME,eAAiB,SAC3BC,EAAAA,EAAAA,YAAU,WACRhD,GAASiD,EAAAA,EAAAA,MACV,GAAE,CAACjD,KAEF,iCACE,eAAIQ,UAAU,kBAAd,wBACA,SAAC,EAAD,KACA,iCACE,wCACA,SAAC2B,EAAD,CAAiBnE,OAAQA,IACxByE,IAAa,SAAC,IAAD,KACZA,GAAa7E,EAASsF,OAAS,IAC/B,SAACrB,EAAD,CAAeC,aAAclE,IAE9BE,IAAS,8DAEX2E,IAAa,SAAC,IAAD,MAGnB,C","sources":["redux/contacts/contactsSelector.js","redux/filterSelector.js","../node_modules/nanoid/index.browser.js","components/phonebook/phonebook.js","components/phonebook/phonebookList.js","components/phonebook/phonebookFilter.js","pages/contacts.js"],"sourcesContent":["export const getContacts = ({ contacts }) => contacts.items;\n\nexport const getState = ({ contacts }) => ({\n  loading: contacts.loading,\n  error: contacts.error,\n});\n\nexport const getFilteredContacts = ({ contacts, filter }) => {\n  if (!filter) {\n    return contacts.items;\n  }\n\n  const normalizedFilter = filter.toLocaleLowerCase();\n  const filteredContacts = contacts.items.filter(({ name }) => {\n    const normalizedName = name.toLocaleLowerCase();\n    const result = normalizedName.includes(normalizedFilter);\n    return result;\n  });\n  return filteredContacts;\n};\n\nexport const getLoadingStatus = state => state.contacts.loading;\n","export const getFilter = store => store.filter;\n","import { urlAlphabet } from './url-alphabet/index.js'\nlet random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nlet customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nlet customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nlet nanoid = (size = 21) => {\n  let id = ''\n  let bytes = crypto.getRandomValues(new Uint8Array(size))\n  while (size--) {\n    let byte = bytes[size] & 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte < 63) {\n      id += '_'\n    } else {\n      id += '-'\n    }\n  }\n  return id\n}\nexport { nanoid, customAlphabet, customRandom, urlAlphabet, random }\n","import { useState } from 'react';\nimport { nanoid } from 'nanoid';\nimport { useDispatch } from 'react-redux';\nimport { addContact } from 'redux/contacts/contactOperations';\nimport Button from '@mui/material/Button';\nimport { TextField } from '@mui/material';\nimport { styled } from '@mui/material/styles';\n\nconst CssTextField = styled(TextField)({\n  '& .MuiInputBase-input': {\n    width: '320px',\n    color: '#000',\n  },\n  '& .MuiFormLabel-root': {\n    color: '#000',\n  },\n  '& label.Mui-focused': {\n    color: '#000',\n  },\n  '& .MuiOutlinedInput-root': {\n    '& fieldset': {\n      borderColor: '#000',\n      boxShadow: '0px 5px 10px 6px rgba(139, 211, 225, 0.2)',\n    },\n    '&:hover fieldset': {\n      borderColor: '#000',\n    },\n    '&.Mui-focused fieldset': {\n      borderColor: '#000',\n    },\n  },\n});\n\nexport default function PhonebookForm() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const [gender, setGender] = useState('');\n\n  const dispatch = useDispatch();\n\n  const handleChange = event => {\n    const { name, value } = event.target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      case 'gender':\n        setGender(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const handleSabmit = event => {\n    event.preventDefault();\n    const contact = {\n      name,\n      number,\n      gender,\n    };\n    setName('');\n    setNumber('');\n    setGender('');\n    dispatch(addContact(contact));\n  };\n\n  let nameId = nanoid();\n  let numberId = nanoid();\n\n  return (\n    <form className=\"phonebook-form\" onSubmit={handleSabmit}>\n      <CssTextField\n        margin=\"normal\"\n        label=\"Name\"\n        variant=\"outlined\"\n        onChange={handleChange}\n        id={nameId}\n        value={name}\n        name=\"name\"\n        autoComplete=\"off\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        required\n      />\n      <CssTextField\n        margin=\"normal\"\n        label=\"Number\"\n        variant=\"outlined\"\n        onChange={handleChange}\n        id={numberId}\n        value={number}\n        type=\"tel\"\n        name=\"number\"\n        autoComplete=\"off\"\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        required\n      />\n      <Button\n        type=\"submit\"\n        variant=\"contained\"\n        sx={{\n          width: '100%',\n          marginTop: '15px',\n          fontSize: '24px',\n          fontWeight: '700',\n          color: '#fff',\n          backgroundColor: '#000',\n          border: '2px solid #fff',\n          boxShadow: '0px 0px 10px 10px rgba(255, 162, 0, 0.2) inset',\n          borderRadius: '25px',\n          '&.MuiButton-root:hover': {\n            color: '#000',\n            backgroundColor: '#fff',\n            boxShadow: '0px 5px 10px 6px rgba(139, 211, 225, 0.4)',\n          },\n        }}\n      >\n        Add contact\n      </Button>\n    </form>\n  );\n}\n","import { useDispatch } from 'react-redux';\nimport { removeContact } from 'redux/contacts/contactOperations';\n\nexport default function PhonebookList({ contactsList }) {\n  const dispatch = useDispatch();\n  const oneContacts = contactsList.map(({ id, name, number, gender }) => {\n    return (\n      <li key={id} className=\"contact-list\">\n        <p>\n          {name}: {number}\n          {''}\n        </p>\n        <button\n          className=\"delete-btn\"\n          type=\"button\"\n          onClick={() => dispatch(removeContact(id))}\n        >\n          Delete\n        </button>\n      </li>\n    );\n  });\n\n  return <ul>{oneContacts}</ul>;\n}\n","import { nanoid } from 'nanoid';\nimport { useDispatch } from 'react-redux';\nimport { setFilter } from 'redux/filterSlice';\n\nexport default function PhonebookFilter({ filter }) {\n  const filterId = nanoid();\n  const dispatch = useDispatch();\n\n  const filterChange = event => {\n    dispatch(setFilter(event.target.value));\n  };\n\n  return (\n    <form>\n      <label htmlFor={filterId}>Find contacts by name</label>\n      <input\n        autoComplete=\"off\"\n        id={filterId}\n        value={filter}\n        type=\"text\"\n        name=\"filter\"\n        onChange={filterChange}\n      />\n    </form>\n  );\n}\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts } from 'redux/contacts/contactOperations';\nimport { getFilteredContacts } from 'redux/contacts/contactsSelector';\nimport { getFilter } from 'redux/filterSelector';\nimport { getState } from 'redux/contacts/contactsSelector';\nimport Phonebook from '../components/phonebook/phonebook';\nimport PhonebookList from '../components/phonebook/phonebookList';\nimport PhonebookFilter from '../components/phonebook/phonebookFilter';\nimport Loader from 'components/loader';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const contacts = useSelector(getFilteredContacts);\n  const { isLoading, error } = useSelector(getState);\n  const filter = useSelector(getFilter);\n  // toggleBGD();\n  const bgd = document.querySelector('.login-screen-bgd');\n  bgd.style.background =\n    'linear-gradient( rgba(255, 255, 255, 0), rgba(0, 0, 0, 0.5)), url(https://raw.githubusercontent.com/AleksandrVyshnyvetskyi/goit-react-hw-08-phonebook/main/src/components/phonebook/img/background.jpg)';\n  bgd.style.backgroundSize = 'cover';\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n  return (\n    <>\n      <h1 className=\"phonebook-title\">Phonebook</h1>\n      <Phonebook />\n      <>\n        <h2>Contacts :</h2>\n        <PhonebookFilter filter={filter} />\n        {isLoading && <Loader />}\n        {!isLoading && contacts.length > 0 && (\n          <PhonebookList contactsList={contacts} />\n        )}\n        {error && <p>Oops... Something went wrong...</p>}\n      </>\n      {isLoading && <Loader />}\n    </>\n  );\n}\n"],"names":["getState","contacts","loading","error","getFilteredContacts","filter","items","normalizedFilter","toLocaleLowerCase","name","includes","getFilter","store","nanoid","size","id","bytes","crypto","getRandomValues","Uint8Array","byte","toString","toUpperCase","CssTextField","styled","TextField","width","color","borderColor","boxShadow","PhonebookForm","useState","setName","number","setNumber","gender","setGender","dispatch","useDispatch","handleChange","event","target","value","nameId","numberId","className","onSubmit","preventDefault","contact","addContact","margin","label","variant","onChange","autoComplete","pattern","required","type","Button","sx","marginTop","fontSize","fontWeight","backgroundColor","border","borderRadius","PhonebookList","contactsList","oneContacts","map","onClick","removeContact","PhonebookFilter","filterId","htmlFor","setFilter","Contacts","useSelector","isLoading","bgd","document","querySelector","style","background","backgroundSize","useEffect","fetchContacts","length"],"sourceRoot":""}